---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BlogPost from '../layouts/BlogPost.astro';
import PasswordGate from '../components/PasswordGate.astro'; // assuming this is where PasswordGate is located

export async function getStaticPaths() {
  // Exclude any content inside the PRIVATE folder from static paths
  // Also exclude posts with private: true in frontmatter
  const posts = await getCollection('blog', ({ id, data }) => {
    const idLower = id.toLowerCase();
    const isInPrivateFolder = idLower.includes('/private/') || idLower.startsWith('private/');
    const isPrivatePost = data.private === true;
    return !isInPrivateFolder && !isPrivatePost;
  });
  return posts.map((post) => ({ params: { slug: post.id }, props: post }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);
const isPrivate = post.data.private;
const hash = post.data.passwordHash;

---

{isPrivate ? (
  <PasswordGate hash={hash}>
    <BlogPost {...post.data}>
      <Content />
    </BlogPost>
  </PasswordGate>
) : (
  <BlogPost {...post.data}>
    <Content />
  </BlogPost>
)}

---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> --> <!-- Removed old SVG link -->

<!-- Favicons from /public/favicons/ -->
<link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
<link rel="icon" href="/favicons/favicon.ico" sizes="any"> <!-- Modern way to link .ico -->
<!-- Add manifest link here if you have a site.webmanifest using the android-chrome icons -->
<!-- <link rel="manifest" href="/favicons/site.webmanifest"> -->

<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<script type="module">
;(() => {
  // target: October 1, 2027
  const target = new Date(2027, 9, 1);
  const now = new Date();
  
  // Handle case where target is already passed
  if (now >= target) {
    const msg = "0 0 0";
    document.title = msg;
    const t = document.querySelector('head > title');
    if (t) t.textContent = msg;
    return;
  }

  // Calculate time remaining
  const diff = target - now;
  
  // Calculate months, days, hours
  let months = (target.getFullYear() - now.getFullYear()) * 12 + 
              (target.getMonth() - now.getMonth());
  
  // Create a date for next month calculation
  const nextMonthDate = new Date(now);
  nextMonthDate.setMonth(now.getMonth() + months);
  nextMonthDate.setDate(Math.min(target.getDate(), nextMonthDate.getDate()));
  
  // Get days between nextMonthDate and target
  const dayDiff = Math.floor((target - nextMonthDate) / (1000 * 60 * 60 * 24));
  
  // Calculate days and hours
  const days = Math.floor(diff / (1000 * 60 * 60 * 24)) % 30;
  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  
  // Format message in concise format: months, days, hours
  const msg = `${months} ${days} ${hours}`;
  
  // override title
  document.title = msg;
  const t = document.querySelector('head > title');
  if (t) t.textContent = msg;
})();
</script>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />
